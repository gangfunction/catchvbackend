plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'

    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.7'
    implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.json:json:20231013'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    //prometeus
    implementation 'io.micrometer:micrometer-registry-prometheus'




    // queryDSL 설정
    implementation "com.querydsl:querydsl-jpa"
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
    annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드


    //postgresql
    implementation 'org.postgresql:postgresql'
    runtimeOnly 'org.postgresql:postgresql'

    //swagger - springfox
//    implementation 'io.springfox:springfox-boot-starter:3.0.0'
//    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    //swagger - springdoc
    implementation("org.springdoc:springdoc-openapi-ui:1.6.12")


    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation ('org.springframework.boot:spring-boot-starter-test')
            {
                exclude group: "org.junit.vintage", module:"junit-vintage-engine"
        exclude group: "com.vaadin.external.google", module:"android-json"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}
springBoot{
    buildInfo()
}